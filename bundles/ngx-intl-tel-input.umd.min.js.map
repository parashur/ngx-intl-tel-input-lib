{"version":3,"sources":["ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.service.ts","ng://ngx-intl-tel-input/lib/enums/country-iso.enum.ts","ng://ngx-intl-tel-input/lib/data/country-code.ts","ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.validator.ts","ng://ngx-intl-tel-input/lib/enums/search-country-field.enum.ts","ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.component.ts","ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.module.ts","ng://ngx-intl-tel-input/lib/enums/tooltip-label.enum.ts"],"names":["NgxIntlTelInputService","Injectable","args","providedIn","Afghanistan","Albania","Algeria","AmericanSamoa","Andorra","Angola","Anguilla","AntiguaAndBarbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","BosniaAndHerzegovina","Botswana","Brazil","BritishIndianOceanTerritory","BritishVirginIslands","Brunei","Bulgaria","BurkinaFaso","Burundi","Cambodia","Cameroon","Canada","CapeVerde","CaribbeanNetherlands","CaymanIslands","CentralAfricanRepublic","Chad","Chile","China","ChristmasIsland","Cocos","Colombia","Comoros","CongoDRCJamhuriYaKidemokrasiaYaKongo","CongoRepublicCongoBrazzaville","CookIslands","CostaRica","CôteDIvoire","Croatia","Cuba","Curaçao","Cyprus","CzechRepublic","Denmark","Djibouti","Dominica","DominicanRepublic","Ecuador","Egypt","ElSalvador","EquatorialGuinea","Eritrea","Estonia","Ethiopia","FalklandIslands","FaroeIslands","Fiji","Finland","France","FrenchGuiana","FrenchPolynesia","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Honduras","HongKong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","IsleOfMan","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macau","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","MarshallIslands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","NewCaledonia","NewZealand","Nicaragua","Niger","Nigeria","Niue","NorfolkIsland","NorthKorea","NorthernMarianaIslands","Norway","Oman","Pakistan","Palau","Palestine","Panama","PapuaNewGuinea","Paraguay","Peru","Philippines","Poland","Portugal","PuertoRico","Qatar","Réunion","Romania","Russia","Rwanda","SaintBarthélemy","SaintHelena","SaintKittsAndNevis","SaintLucia","SaintMartin","SaintPierreAndMiquelon","SaintVincentAndTheGrenadines","Samoa","SanMarino","SãoToméAndPríncipe","SaudiArabia","Senegal","Serbia","Seychelles","SierraLeone","Singapore","SintMaarten","Slovakia","Slovenia","SolomonIslands","Somalia","SouthAfrica","SouthKorea","SouthSudan","Spain","SriLanka","Sudan","Suriname","SvalbardAndJanMayen","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","TimorLeste","Togo","Tokelau","Tonga","TrinidadAndTobago","Tunisia","Turkey","Turkmenistan","TurksAndCaicosIslands","Tuvalu","USVirginIslands","Uganda","Ukraine","UnitedArabEmirates","UnitedKingdom","UnitedStates","Uruguay","Uzbekistan","Vanuatu","VaticanCity","Venezuela","Vietnam","WallisAndFutuna","WesternSahara","Yemen","Zambia","Zimbabwe","ÅlandIslands","CountryCode","this","allCountries","CountryISO","phoneNumberValidator","control","id","value","el","document","getElementById","undefined","isCheckValidation","getAttribute","isRequired","errors","required","error","validatePhoneNumber","valid","number","lpn.PhoneNumberUtil","getInstance","parse","countryCode","e","isValidNumberForRegion","clearValidators","DialCode","Iso2","Name","All","ɵ0","NgxIntlTelInputComponent","countryCodeData","preferredCountries","enablePlaceholder","cssClass","onlyCountries","enableAutoCountrySelect","searchCountryFlag","searchCountryField","SearchCountryField","searchCountryPlaceholder","maxLength","selectFirstCountry","phoneValidation","enableCustomPlaceholder","customPlaceholder","readOnly","countryChange","EventEmitter","selectedCountry","areaCodes","dialCode","flagClass","iso2","name","placeHolder","priority","separateDialCode","phoneNumber","preferredCountriesInDropDown","phoneUtil","disabled","countrySearchText","onTouched","propagateChange","_","prototype","ngOnInit","init","ngOnChanges","changes","currentValue","previousValue","getSelectedCountry","getPreferredCountries","checkSeparateDialCodeStyle","_this","fetchCountryData","length","filter","c","includes","setSelectedCountry","forEach","preferredCountry","push","selectedCountryISO","find","toLowerCase","onPhoneNumberChange","country","emit","searchCountry","countrySearchTextLower","indexOf","startsWith","countryList","nativeElement","querySelector","scrollIntoView","behavior","block","inline","toUpperCase","getCountryCode","getCountryIsoCode","newCountry","intlNo","format","lpn.PhoneNumberFormat","INTERNATIONAL","removeDialCode","internationalNumber","nationalNumber","NATIONAL","onCountrySelect","focus","onInputKeyPress","event","test","key","ctrlKey","preventDefault","toString","toLocaleLowerCase","getPhoneNumberPlaceHolder","getExampleNumber","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","writeValue","obj","setTimeout","rawNumber","countries","mainCountry","secondaryCountries","matchedCountry","areaCode","separateDialCodePlaceHolder","placeholder","substr","cntryCd","separateDialCodeClass","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","useValue","Input","Output","ViewChild","static","NgxIntlTelInputModule","forRoot","ngModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","BsDropdownModule","TooltipModule","exports"],"mappings":"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AAQ,KACRC,SAAW,KACXC,oBAAsB,KACtBC,UAAY,KACZC,OAAS,KACTC,YAAc,KACdC,MAAQ,KACRC,OAAS,KACTC,WAAa,KACbC,SAAW,KACXC,SAAW,KACXC,WAAa,KACbC,KAAO,KACPC,QAAU,KACVC,MAAQ,KACRC,kBAAoB,KACpBC,QAAU,KACVC,OAAS,KACTC,aAAe,KACfC,sBAAwB,KACxBC,OAAS,KACTC,gBAAkB,KAClBC,OAAS,KACTC,QAAU,KACVC,mBAAqB,KACrBC,cAAgB,KAChBC,aAAe,KACfC,QAAU,KACVC,WAAa,KACbC,QAAU,KACVC,YAAc,KACdC,UAAY,KACZC,QAAU,KACVC,gBAAkB,KAClBC,cAAgB,KAChBC,MAAQ,KACRC,OAAS,KACTC,SAAW,KACXC,eAAe,MCnPhBC,EAEA,WACQC,KAAAC,aAAe,CACrB,CACC,6BACAC,EAAWtP,YACX,MAED,CACC,qBACAsP,EAAWrP,QACX,OAED,CACC,uBACAqP,EAAWpP,QACX,OAED,CACC,iBACA,KACA,IACA,EACA,CACC,QAGF,CACC,UACAoP,EAAWlP,QACX,OAED,CACC,SACAkP,EAAWjP,OACX,OAED,CACC,WACA,KACA,IACA,EACA,CACC,QAGF,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,YACAiP,EAAW9O,UACX,MAED,CACC,qBACA8O,EAAW7O,QACX,OAED,CACC,QACA6O,EAAW5O,MACX,OAED,CACC,YACA4O,EAAW3O,UACX,KACA,GAED,CACC,uBACA2O,EAAW1O,QACX,MAED,CACC,0BACA0O,EAAWzO,WACX,OAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,uBACAyO,EAAWvO,QACX,OAED,CACC,wBACAuO,EAAWtO,WACX,OAED,CACC,WACA,KACA,IACA,EACA,CACC,QAGF,CACC,qBACAsO,EAAWpO,QACX,OAED,CACC,mBACAoO,EAAWnO,QACX,MAED,CACC,SACAmO,EAAWlO,OACX,OAED,CACC,gBACAkO,EAAWjO,MACX,OAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,iBACAiO,EAAW/N,OACX,OAED,CACC,UACA+N,EAAW9N,QACX,OAED,CACC,+CACA8N,EAAW7N,qBACX,OAED,CACC,WACA6N,EAAW5N,SACX,OAED,CACC,kBACA4N,EAAW3N,OACX,MAED,CACC,iCACA2N,EAAW1N,4BACX,OAED,CACC,yBACA,KACA,IACA,EACA,CACC,QAGF,CACC,SACA0N,EAAWxN,OACX,OAED,CACC,sBACAwN,EAAWvN,SACX,OAED,CACC,eACAuN,EAAWtN,YACX,OAED,CACC,qBACAsN,EAAWrN,QACX,OAED,CACC,qBACAqN,EAAWpN,SACX,OAED,CACC,sBACAoN,EAAWnN,SACX,OAED,CACC,SACAmN,EAAWlN,OACX,IACA,EACA,CACC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,QAGrC,CACC,0BACAkN,EAAWjN,UACX,OAED,CACC,wBACAiN,EAAWhN,qBACX,MACA,GAED,CACC,iBACA,KACA,IACA,EACA,CACC,QAGF,CACC,uDACAgN,EAAW9M,uBACX,OAED,CACC,eACA8M,EAAW7M,KACX,OAED,CACC,QACA6M,EAAW5M,MACX,MAED,CACC,aACA4M,EAAW3M,MACX,MAED,CACC,mBACA2M,EAAW1M,gBACX,KACA,GAED,CACC,0BACA0M,EAAWzM,MACX,KACA,GAED,CACC,WACAyM,EAAWxM,SACX,MAED,CACC,yBACAwM,EAAWvM,QACX,OAED,CACC,iDACAuM,EAAWtM,qCACX,OAED,CACC,uCACAsM,EAAWrM,8BACX,OAED,CACC,eACAqM,EAAWpM,YACX,OAED,CACC,aACAoM,EAAWnM,UACX,OAED,CACC,gBACAmM,EAAWlM,YACX,OAED,CACC,qBACAkM,EAAWjM,QACX,OAED,CACC,OACAiM,EAAWhM,KACX,MAED,CACC,UACAgM,EAAW/L,QACX,MACA,GAED,CACC,kBACA+L,EAAW9L,OACX,OAED,CACC,mCACA8L,EAAW7L,cACX,OAED,CACC,oBACA6L,EAAW5L,QACX,MAED,CACC,WACA4L,EAAW3L,SACX,OAED,CACC,WACA2L,EAAW1L,SACX,QAED,CACC,4CACA0L,EAAWzL,kBACX,IACA,EACA,CAAC,MAAO,MAAO,QAEhB,CACC,UACAyL,EAAWxL,QACX,OAED,CACC,iBACAwL,EAAWvL,MACX,MAED,CACC,cACAuL,EAAWtL,WACX,OAED,CACC,wCACAsL,EAAWrL,iBACX,OAED,CACC,UACAqL,EAAWpL,QACX,OAED,CACC,kBACAoL,EAAWnL,QACX,OAED,CACC,WACAmL,EAAWlL,SACX,OAED,CACC,oCACAkL,EAAWjL,gBACX,OAED,CACC,0BACAiL,EAAWhL,aACX,OAED,CACC,OACAgL,EAAW/K,KACX,OAED,CACC,kBACA+K,EAAW9K,QACX,MACA,GAED,CACC,SACA8K,EAAW7K,OACX,MAED,CACC,mCACA6K,EAAW5K,aACX,OAED,CACC,yCACA4K,EAAW3K,gBACX,OAED,CACC,QACA2K,EAAW1K,MACX,OAED,CACC,SACA0K,EAAWzK,OACX,OAED,CACC,uBACAyK,EAAWxK,QACX,OAED,CACC,wBACAwK,EAAWvK,QACX,MAED,CACC,gBACAuK,EAAWtK,MACX,OAED,CACC,YACAsK,EAAWrK,UACX,OAED,CACC,kBACAqK,EAAWpK,OACX,MAED,CACC,+BACAoK,EAAWnK,UACX,OAED,CACC,UACAmK,EAAWlK,QACX,QAED,CACC,aACAkK,EAAWjK,WACX,MACA,GAED,CACC,OACA,KACA,IACA,EACA,CACC,QAGF,CACC,YACAiK,EAAW/J,UACX,OAED,CACC,WACA+J,EAAW9J,SACX,KACA,EACA,CAAC,OAEF,CACC,kBACA8J,EAAW7J,OACX,OAED,CACC,+BACA6J,EAAW5J,aACX,OAED,CACC,SACA4J,EAAW3J,OACX,OAED,CACC,QACA2J,EAAW1J,MACX,OAED,CACC,WACA0J,EAAWzJ,SACX,OAED,CACC,iBACAyJ,EAAWxJ,SACX,OAED,CACC,yBACAwJ,EAAWvJ,QACX,MAED,CACC,mBACAuJ,EAAWtJ,QACX,OAED,CACC,eACAsJ,EAAWrJ,MACX,MAED,CACC,YACAqJ,EAAWpJ,UACX,MAED,CACC,kBACAoJ,EAAWnJ,KACX,MAED,CACC,mBACAmJ,EAAWlJ,KACX,OAED,CACC,UACAkJ,EAAWjJ,QACX,OAED,CACC,cACAiJ,EAAWhJ,UACX,KACA,EACA,CAAC,OAEF,CACC,oBACAgJ,EAAW/I,OACX,OAED,CACC,iBACA+I,EAAW9I,MACX,KACA,GAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,aACA8I,EAAW5I,MACX,MAED,CACC,SACA4I,EAAW3I,OACX,KACA,EACA,CAAC,OAEF,CACC,qBACA2I,EAAW1I,OACX,OAED,CACC,yBACA0I,EAAWzI,WACX,IACA,GAED,CACC,QACAyI,EAAWxI,MACX,OAED,CACC,WACAwI,EAAWvI,SACX,OAED,CACC,SACAuI,EAAWtI,OACX,OAED,CACC,qBACAsI,EAAWrI,OACX,OAED,CACC,0BACAqI,EAAWpI,WACX,OAED,CACC,aACAoI,EAAWnI,KACX,OAED,CACC,mBACAmI,EAAWlI,OACX,OAED,CACC,qBACAkI,EAAWjI,QACX,OAED,CACC,UACAiI,EAAWhI,QACX,OAED,CACC,UACAgI,EAAW/H,QACX,OAED,CACC,mBACA+H,EAAW9H,MACX,OAED,CACC,gBACA8H,EAAW7H,cACX,OAED,CACC,sBACA6H,EAAW5H,UACX,OAED,CACC,aACA4H,EAAW3H,WACX,OAED,CACC,aACA2H,EAAW1H,MACX,OAED,CACC,iCACA0H,EAAWzH,UACX,OAED,CACC,4BACAyH,EAAWxH,WACX,OAED,CACC,SACAwH,EAAWvH,OACX,OAED,CACC,WACAuH,EAAWtH,SACX,MAED,CACC,WACAsH,EAAWrH,SACX,OAED,CACC,OACAqH,EAAWpH,KACX,OAED,CACC,QACAoH,EAAWnH,MACX,OAED,CACC,mBACAmH,EAAWlH,gBACX,OAED,CACC,aACAkH,EAAWjH,WACX,OAED,CACC,4BACAiH,EAAWhH,WACX,OAED,CACC,oBACAgH,EAAW/G,UACX,OAED,CACC,UACA+G,EAAW9G,QACX,MACA,GAED,CACC,kBACA8G,EAAW7G,OACX,MAED,CACC,aACA6G,EAAW5G,WACX,OAED,CACC,8BACA4G,EAAW3G,QACX,OAED,CACC,SACA2G,EAAW1G,OACX,OAED,CACC,oBACA0G,EAAWzG,SACX,OAED,CACC,yBACAyG,EAAWxG,WACX,OAED,CACC,aACA,KACA,IACA,EACA,CACC,QAGF,CACC,sBACAwG,EAAWtG,QACX,MACA,GAED,CACC,0BACAsG,EAAWrG,WACX,OAED,CACC,2BACAqG,EAAWpG,QACX,MAED,CACC,oBACAoG,EAAWnG,QACX,OAED,CACC,QACAmG,EAAWlG,MACX,OAED,CACC,gBACAkG,EAAWjG,MACX,OAED,CACC,0BACAiG,EAAWhG,YACX,MAED,CACC,qCACAgG,EAAW/F,aACX,OAED,CACC,cACA+F,EAAW9F,WACX,MAED,CACC,YACA8F,EAAW7F,UACX,OAED,CACC,gBACA6F,EAAW5F,MACX,OAED,CACC,UACA4F,EAAW3F,QACX,OAED,CACC,OACA2F,EAAW1F,KACX,OAED,CACC,iBACA0F,EAAWzF,cACX,OAED,CACC,+BACAyF,EAAWxF,WACX,OAED,CACC,2BACAwF,EAAWvF,uBACX,QAED,CACC,iBACAuF,EAAWtF,OACX,KACA,GAED,CACC,kBACAsF,EAAWrF,KACX,OAED,CACC,wBACAqF,EAAWpF,SACX,MAED,CACC,QACAoF,EAAWnF,MACX,OAED,CACC,wBACAmF,EAAWlF,UACX,OAED,CACC,kBACAkF,EAAWjF,OACX,OAED,CACC,mBACAiF,EAAWhF,eACX,OAED,CACC,WACAgF,EAAW/E,SACX,OAED,CACC,cACA+E,EAAW9E,KACX,MAED,CACC,cACA8E,EAAW7E,YACX,MAED,CACC,kBACA6E,EAAW5E,OACX,MAED,CACC,WACA4E,EAAW3E,SACX,OAED,CACC,cACA2E,EAAW1E,WACX,IACA,EACA,CAAC,MAAO,QAET,CACC,iBACA0E,EAAWzE,MACX,OAED,CACC,uBACAyE,EAAWxE,QACX,MACA,GAED,CACC,oBACAwE,EAAWvE,QACX,MAED,CACC,kBACAuE,EAAWtE,OACX,IACA,GAED,CACC,SACAsE,EAAWrE,OACX,OAED,CACC,sCACAqE,EAAWpE,gBACX,MACA,GAED,CACC,eACAoE,EAAWnE,YACX,OAED,CACC,wBACAmE,EAAWlE,mBACX,QAED,CACC,cACA,KACA,IACA,EACA,CACC,QAGF,CACC,iDACAkE,EAAWhE,YACX,MACA,GAED,CACC,uDACAgE,EAAW/D,uBACX,OAED,CACC,mCACA,KACA,IACA,EACA,CACC,QAGF,CACC,QACA+D,EAAW7D,MACX,OAED,CACC,aACA6D,EAAW5D,UACX,OAED,CACC,8CACA4D,EAAW3D,mBACX,OAED,CACC,6CACA2D,EAAW1D,YACX,OAED,CACC,oBACA0D,EAAWzD,QACX,OAED,CACC,kBACAyD,EAAWxD,OACX,OAED,CACC,aACAwD,EAAWvD,WACX,OAED,CACC,eACAuD,EAAWtD,YACX,OAED,CACC,YACAsD,EAAWrD,UACX,MAED,CACC,eACA,KACA,IACA,EACA,CACC,QAGF,CACC,uBACAqD,EAAWnD,SACX,OAED,CACC,uBACAmD,EAAWlD,SACX,OAED,CACC,kBACAkD,EAAWjD,eACX,OAED,CACC,uBACAiD,EAAWhD,QACX,OAED,CACC,eACAgD,EAAW/C,YACX,MAED,CACC,qBACA+C,EAAW9C,WACX,MAED,CACC,gCACA8C,EAAW7C,WACX,OAED,CACC,iBACA6C,EAAW5C,MACX,MAED,CACC,0BACA4C,EAAW3C,SACX,MAED,CACC,qBACA2C,EAAW1C,MACX,OAED,CACC,WACA0C,EAAWzC,SACX,OAED,CACC,yBACAyC,EAAWxC,oBACX,KACA,GAED,CACC,YACAwC,EAAWvC,UACX,OAED,CACC,mBACAuC,EAAWtC,OACX,MAED,CACC,wBACAsC,EAAWrC,YACX,MAED,CACC,mBACAqC,EAAWpC,MACX,OAED,CACC,cACAoC,EAAWnC,OACX,OAED,CACC,aACAmC,EAAWlC,WACX,OAED,CACC,WACAkC,EAAWjC,SACX,OAED,CACC,iBACAiC,EAAWhC,SACX,MAED,CACC,cACAgC,EAAW/B,WACX,OAED,CACC,OACA+B,EAAW9B,KACX,OAED,CACC,UACA8B,EAAW7B,QACX,OAED,CACC,QACA6B,EAAW5B,MACX,OAED,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,oBACA4B,EAAW1B,QACX,OAED,CACC,mBACA0B,EAAWzB,OACX,MAED,CACC,eACAyB,EAAWxB,aACX,OAED,CACC,2BACAwB,EAAWvB,sBACX,QAED,CACC,SACAuB,EAAWtB,OACX,OAED,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,SACAsB,EAAWpB,OACX,OAED,CACC,oBACAoB,EAAWnB,QACX,OAED,CACC,qDACAmB,EAAWlB,mBACX,OAED,CACC,iBACAkB,EAAWjB,cACX,KACA,GAED,CACC,gBACAiB,EAAWhB,aACX,IACA,GAED,CACC,UACAgB,EAAWf,QACX,OAED,CACC,2BACAe,EAAWd,WACX,OAED,CACC,UACAc,EAAWb,QACX,OAED,CACC,oCACAa,EAAWZ,YACX,KACA,GAED,CACC,YACAY,EAAWX,UACX,MAED,CACC,qBACAW,EAAWV,QACX,MAED,CACC,oBACAU,EAAWT,gBACX,OAED,CACC,sCACAS,EAAWR,cACX,MACA,GAED,CACC,mBACAQ,EAAWP,MACX,OAED,CACC,SACAO,EAAWN,OACX,OAED,CACC,WACAM,EAAWL,SACX,OAED,CACC,gBACAK,EAAWJ,aACX,MACA,KCryCUK,EAAoB,SAAIC,OAC9BC,EAAKD,EAAQE,OAASF,EAAQE,MAAMD,GAAKD,EAAQE,MAAMD,GAAK,QAC5DE,EAAKC,SAASC,eAAeJ,GAAMG,SAASC,eAAeJ,GAAMK,UACvE,GAAIH,EAAI,KACDI,EAAoBJ,EAAGK,aAAa,cAC1C,GAA0B,SAAtBD,EAA8B,KAC3BE,EAAaT,EAAQU,SAAsC,IAA5BV,EAAQU,OAAOC,SAC9CC,EAAQ,CAAEC,oBAAqB,CAAEC,OAAO,IAC1CC,OAAM,EAEV,IACCA,EAASC,EAAAA,gBAAoBC,cAAcC,MAAMlB,EAAQE,MAAMa,OAAQf,EAAQE,MAAMiB,aACpF,MAAOC,GACR,IAAmB,IAAfX,EAAuB,OAAOG,EAGnC,GAAIZ,EAAQE,MAAO,CAClB,IAAKa,EACJ,OAAOH,EAEP,IAAKI,EAAAA,gBAAoBC,cAAcI,uBAAuBN,EAAQf,EAAQE,MAAMiB,aACnF,OAAOP,OAIsB,UAAtBL,GACVP,EAAQsB,uBC5BVC,SAAW,WACXC,KAAO,OACPC,KAAO,OACPC,IAAM,OCJPC,EAwBa5B,EAdb6B,EAAA,WAsEC,SAAAA,EACSC,GAAAjC,KAAAiC,gBAAAA,EAlDAjC,KAAAM,MAAQ,GACRN,KAAAkC,mBAAoC,GACpClC,KAAAmC,mBAAoB,EACpBnC,KAAAoC,SAAW,eACXpC,KAAAqC,cAA+B,GAC/BrC,KAAAsC,yBAA0B,EAC1BtC,KAAAuC,mBAAoB,EACpBvC,KAAAwC,mBAA2C,CAACC,EAAmBX,KAC/D9B,KAAA0C,yBAA2B,iBAC3B1C,KAAA2C,UAAY,GAEZ3C,KAAA4C,oBAAqB,EAErB5C,KAAA6C,iBAAkB,EAClB7C,KAAAK,GAAK,QACLL,KAAA8C,yBAA0B,EAC1B9C,KAAA+C,kBAAoB,eACpB/C,KAAAgD,UAAW,EAEDhD,KAAAiD,cAAgB,IAAIC,EAAAA,aAEvClD,KAAAmD,gBAA2B,CAC1BC,UAAW1C,UACX2C,SAAU,GACVC,UAAW,GACXC,KAAM,GACNC,KAAM,GACNC,YAAa,GACbC,SAAU,GAIF1D,KAAA2D,kBAAmB,EAG5B3D,KAAA4D,YAAc,GACd5D,KAAAC,aAA+B,GAC/BD,KAAA6D,6BAA+C,GAE/C7D,KAAA8D,UAAiB1C,EAAAA,gBAAoBC,cACrCrB,KAAA+D,UAAW,EACX/D,KAAAc,OAAqB,CAAC,6BACtBd,KAAAgE,kBAAoB,GAIpBhE,KAAAiE,UAAS,aACTjE,KAAAkE,gBAAe,SAAIC,KAyUpB,OAnUCnC,EAAAoC,UAAAC,SAAA,WACCrE,KAAKsE,QAGNtC,EAAAoC,UAAAG,YAAA,SAAYC,GACPxE,KAAKC,cAAgBuE,EAA4B,oBACjDA,EAA4B,mBAAEC,eAAiBD,EAA4B,mBAAEE,eAChF1E,KAAK2E,qBAEFH,EAAQtC,oBACXlC,KAAK4E,wBAEN5E,KAAK6E,8BAON7C,EAAAoC,UAAAE,KAAA,WAAA,IAAAQ,EAAA9E,KACCA,KAAK+E,mBACD/E,KAAKkC,mBAAmB8C,QAC3BhF,KAAK4E,wBAEF5E,KAAKqC,cAAc2C,SACtBhF,KAAKC,aAAeD,KAAKC,aAAagF,OAAM,SAACC,GAAK,OAAAJ,EAAKzC,cAAc8C,SAASD,EAAE3B,SAE7EvD,KAAK4C,qBACJ5C,KAAK6D,6BAA6BmB,OACrChF,KAAKoF,mBAAmBpF,KAAK6D,6BAA6B,IAE1D7D,KAAKoF,mBAAmBpF,KAAKC,aAAa,KAG5CD,KAAK2E,qBACL3E,KAAK6E,8BAGN7C,EAAAoC,UAAAQ,sBAAA,WAAA,IAAAE,EAAA9E,KACKA,KAAKkC,mBAAmB8C,SAC3BhF,KAAK6D,6BAA+B,GACpC7D,KAAKkC,mBAAmBmD,QAAO,SAAC9B,OACzB+B,EAAmBR,EAAK7E,aAAagF,OAAM,SAAEC,GAClD,OAAOA,EAAE3B,OAASA,IAGnBuB,EAAKjB,6BAA6B0B,KAAKD,EAAiB,QAK3DtD,EAAAoC,UAAAO,mBAAA,WAAA,IAAAG,EAAA9E,KACKA,KAAKwF,qBACRxF,KAAKmD,gBAAkBnD,KAAKC,aAAawF,KAAI,SAACP,GAAO,OAAQA,EAAE3B,KAAKmC,gBAAkBZ,EAAKU,mBAAmBE,gBAC1G1F,KAAKmD,kBACJnD,KAAK4D,YACR5D,KAAK2F,sBAEL3F,KAAKkE,gBAAgBxD,cAMzBsB,EAAAoC,UAAAgB,mBAAA,SAAmBQ,GAClB5F,KAAKmD,gBAAkByC,EACvB5F,KAAKiD,cAAc4C,KAAKD,IAOzB5D,EAAAoC,UAAA0B,cAAA,WAAA,IAAAhB,EAAA9E,KACC,GAAKA,KAAKgE,kBAAV,KAQM+B,EAAyB/F,KAAKgE,kBAAkB0B,cAChDE,EAAU5F,KAAKC,aAAagF,OAAM,SAACC,GACxC,GAAIJ,EAAKtC,mBAAmBwD,QAAQvD,EAAmBX,MAAQ,EAAG,CAEjE,GAAIoD,EAAE3B,KAAKmC,cAAcO,WAAWF,GACnC,OAAOb,EAER,GAAIA,EAAE1B,KAAKkC,cAAcO,WAAWF,GACnC,OAAOb,EAER,GAAIA,EAAE7B,SAAS4C,WAAWnB,EAAKd,mBAC9B,OAAOkB,MAEF,CAEN,GAAIJ,EAAKtC,mBAAmBwD,QAAQvD,EAAmBb,OAAS,GAC3DsD,EAAE3B,KAAKmC,cAAcO,WAAWF,GACnC,OAAOb,EAGT,GAAIJ,EAAKtC,mBAAmBwD,QAAQvD,EAAmBZ,OAAS,GAC3DqD,EAAE1B,KAAKkC,cAAcO,WAAWF,GACnC,OAAOb,EAGT,GAAIJ,EAAKtC,mBAAmBwD,QAAQvD,EAAmBd,WAAa,GAC/DuD,EAAE7B,SAAS4C,WAAWnB,EAAKd,mBAC9B,OAAOkB,KAMX,GAAIU,EAAQZ,OAAS,EAAG,KACjBzE,EAAKP,KAAKkG,YAAYC,cAAcC,cAAc,IAAMR,EAAQ,GAAGrC,MACrEhD,GACHA,EAAG8F,eAAe,CAAEC,SAAU,SAAUC,MAAO,UAAWC,OAAQ,YAIpExG,KAAK6E,kCA/CJ7E,KAAKkG,YAAYC,cAAcC,cAAc,oBAAoBC,eAAe,CAC/EC,SAAU,SACVC,MAAO,UACPC,OAAQ,aA+CJxE,EAAAoC,UAAAuB,oBAAP,eAGKxE,EAFJnB,KAAKM,MAAQN,KAAK4D,YAGlB,IACCzC,EAASnB,KAAK8D,UAAUxC,MAAMtB,KAAK4D,YAAa5D,KAAKmD,gBAAgBI,KAAKkD,eACzE,MAAOjF,QAGLD,EAAcvB,KAAKmD,gBAAgBI,KAEvC,GAAIvD,KAAKsC,0BACRf,EAAcJ,GAAUA,EAAOuF,iBAC5B1G,KAAK2G,kBAAkBxF,EAAOuF,iBAAkBvF,GAChDnB,KAAKmD,gBAAgBI,OACLhC,IAAgBvB,KAAKmD,gBAAgBI,KAAM,KACvDqD,EAAa5G,KAAKC,aAAawF,KAAI,SAACP,GAAK,OAAAA,EAAE3B,OAAShC,IACtDqF,IACH5G,KAAKmD,gBAAkByD,GAQ1B,GAJArF,EAAcA,GAA4BvB,KAAKmD,gBAAgBI,KAE/DvD,KAAK6E,6BAEA7E,KAAKM,MAEH,KACAuG,EAAS1F,EAASnB,KAAK8D,UAAUgD,OAAO3F,EAAQ4F,EAAAA,kBAAsBC,eAAiB,GAGzFhH,KAAK2D,kBAAoBkD,IAC5B7G,KAAKM,MAAQN,KAAKiH,eAAeJ,IAGlC7G,KAAKkE,gBAAgB,CACpB/C,OAAQnB,KAAKM,MACb4G,oBAAqBL,EACrBM,eAAgBhG,EAASnB,KAAK8D,UAAUgD,OAAO3F,EAAQ4F,EAAAA,kBAAsBK,UAAY,GACzF7F,YAAaA,EAAYkF,cACzBpD,SAAU,IAAMrD,KAAKmD,gBAAgBE,SACrChD,GAAIL,KAAKK,UAfVL,KAAKkE,gBAAgBxD,YAoBhBsB,EAAAoC,UAAAiD,gBAAP,SAAuBzB,EAAkBrF,GAKxC,GAJAP,KAAKoF,mBAAmBQ,GAExB5F,KAAK6E,6BAED7E,KAAK4D,aAAe5D,KAAK4D,YAAYoB,OAAS,EAAG,CACpDhF,KAAKM,MAAQN,KAAK4D,gBAEdzC,OAAM,EACV,IACCA,EAASnB,KAAK8D,UAAUxC,MAAMtB,KAAK4D,YAAa5D,KAAKmD,gBAAgBI,KAAKkD,eACzE,MAAOjF,QAGHqF,EAAS1F,EAASnB,KAAK8D,UAAUgD,OAAO3F,EAAQ4F,EAAAA,kBAAsBC,eAAiB,GAGzFhH,KAAK2D,kBAAoBkD,IAC5B7G,KAAKM,MAAQN,KAAKiH,eAAeJ,IAGlC7G,KAAKkE,gBAAgB,CACpB/C,OAAQnB,KAAKM,MACb4G,oBAAqBL,EACrBM,eAAgBhG,EAASnB,KAAK8D,UAAUgD,OAAO3F,EAAQ4F,EAAAA,kBAAsBK,UAAY,GACzF7F,YAAavB,KAAKmD,gBAAgBI,KAAKkD,cACvCpD,SAAU,IAAMrD,KAAKmD,gBAAgBE,SACrChD,GAAIL,KAAKK,UAGVL,KAAKkE,gBAAgBxD,WAGtBH,EAAG+G,SAGGtF,EAAAoC,UAAAmD,gBAAP,SAAuBC,GACD,cAOHC,KAAKD,EAAME,MACvBF,EAAMG,SAPa,SAOeF,KAAKD,EAAME,MAN1B,CACxB,YAAa,UAAW,aAAc,YACtC,OAAQ,MAAO,SAAU,SAAU,aAKbvC,SAASqC,EAAME,MACrCF,EAAMI,kBAIE5F,EAAAoC,UAAAW,iBAAV,WAAA,IAAAD,EAAA9E,KAECA,KAAKC,aAAe,GAEpBD,KAAKiC,gBAAgBhC,aAAaoF,QAAO,SAACH,OACnCU,EAAmB,CACxBpC,KAAM0B,EAAE,GAAG2C,WACXtE,KAAM2B,EAAE,GAAG2C,WACXxE,SAAU6B,EAAE,GAAG2C,WACfnE,UAAWwB,EAAE,IAAM,EACnB9B,UAAW8B,EAAE,IAAkBxE,UAC/B4C,UAAW4B,EAAE,GAAG2C,WAAWC,oBAC3BrE,YAAa,IAGVqB,EAAK3C,oBACRyD,EAAQnC,YAAcqB,EAAKiD,0BAA0BnC,EAAQrC,KAAKkD,gBAGnE3B,EAAK7E,aAAasF,KAAKK,MAIf5D,EAAAoC,UAAA2D,0BAAV,SAAoCxG,GACnC,IACC,OAAOvB,KAAK8D,UAAUgD,OAAO9G,KAAK8D,UAAUkE,iBAAiBzG,GAAcwF,EAAAA,kBAAsBC,eAChG,MAAOxF,GACR,OAAOA,IAITQ,EAAAoC,UAAA6D,iBAAA,SAAiBC,GAChBlI,KAAKkE,gBAAkBgE,GAGxBlG,EAAAoC,UAAA+D,kBAAA,SAAkBD,GACjBlI,KAAKiE,UAAYiE,GAGlBlG,EAAAoC,UAAAgE,iBAAA,SAAiBC,GAChBrI,KAAK+D,SAAWsE,GAGjBrG,EAAAoC,UAAAkE,WAAA,SAAWC,GAAX,IAAAzD,EAAA9E,KACKuI,IAAQ7H,WACXV,KAAKsE,OAENtE,KAAK4D,YAAc2E,EACnBC,WAAU,WACT1D,EAAKa,uBACH,IAGI3D,EAAAoC,UAAAuC,kBAAR,SAA0BpF,EAAqBJ,OAExCsH,EAAYtH,EAAgB,QAAE,GAAK0G,WAEnCa,EAAY1I,KAAKC,aAAagF,OAAM,SAACC,GAAK,OAAAA,EAAE7B,WAAa9B,EAAYsG,aAErEc,EAAcD,EAAUjD,KAAI,SAACP,GAAK,OAAAA,EAAE9B,YAAc1C,YAElDkI,EAAqBF,EAAUzD,OAAM,SAACC,GAAK,OAAAA,EAAE9B,YAAc1C,YAC7DmI,EAAiBF,EAAcA,EAAYpF,KAAO7C,UActD,OARAkI,EAAmBvD,QAAO,SAACO,GAC1BA,EAAQxC,UAAUiC,QAAO,SAACyD,GACrBL,EAAUxC,WAAW6C,KACxBD,EAAiBjD,EAAQrC,UAKrBsF,GAGR7G,EAAAoC,UAAA2E,4BAAA,SAA4BC,GAC3B,OAAOhJ,KAAKiH,eAAe+B,IAGpBhH,EAAAoC,UAAA6C,eAAR,SAAuBrD,GAItB,OAHI5D,KAAK2D,kBAAoBC,IAC5BA,EAAcA,EAAYqF,OAAOrF,EAAYoC,QAAQ,KAAO,IAEtDpC,GAIA5B,EAAAoC,UAAAS,2BAAR,WACC,GAAI7E,KAAK2D,kBAAoB3D,KAAKmD,gBAAiB,KAC5C+F,EAAUlJ,KAAKmD,gBAAgBE,SACrCrD,KAAKmJ,sBAAwB,+BAAiCD,EAAQlE,OAAS,QAE/EhF,KAAKmJ,sBAAwB,wBAzY/BC,EAAAA,UAAS1Y,KAAA,CAAC,CACV2Y,SAAU,qBACVC,SAAA,06EAEAC,UAAW,CACVxJ,EACA,CACCyJ,QAASC,EAAAA,kBAETC,YAAaC,EAAAA,WAAU,WAAO,OAAA3H,IAC9B4H,OAAO,GAER,CACCJ,QAASK,EAAAA,cACTC,SAAQ/H,EACR6H,OAAO,g2CAvBD7J,oCA6BPgK,EAAAA,kCACAA,EAAAA,iCACAA,EAAAA,wBACAA,EAAAA,6BACAA,EAAAA,uCACAA,EAAAA,iCACAA,EAAAA,kCACAA,EAAAA,wCACAA,EAAAA,yBACAA,EAAAA,4BACAA,EAAAA,kCACAA,EAAAA,kCACAA,EAAAA,+BACAA,EAAAA,kBACAA,EAAAA,uCACAA,EAAAA,iCACAA,EAAAA,wBACAA,EAAAA,6BAEAC,EAAAA,iCAaAD,EAAAA,2BAYAE,EAAAA,UAASvZ,KAAA,CAAC,cAAe,CAAEwZ,UAAQ,OA4UrClI,EA7YA,GCVAmI,EAAA,WAQA,SAAAA,KAkBA,OANQA,EAAAC,QAAP,WACC,MAAO,CACNC,SAAUF,EACVZ,UAAW,CAAC/Y,yBAfd8Z,EAAAA,SAAQ5Z,KAAA,CAAC,CACT6Z,aAAc,CAACvI,GACfwI,QAAS,CACRC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,iBAAiBR,UACjBS,EAAAA,cAAcT,WAEfU,QAAS,CAAC9I,OASXmI,EA1BA,2ICCCtI,KAAO,OACPD,KAAO","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class NgxIntlTelInputService {\r\n\r\n\tconstructor() { }\r\n}\r\n","export enum CountryISO {\r\n\tAfghanistan = 'af',\r\n\tAlbania = 'al',\r\n\tAlgeria = 'dz',\r\n\tAmericanSamoa = 'as',\r\n\tAndorra = 'ad',\r\n\tAngola = 'ao',\r\n\tAnguilla = 'ai',\r\n\tAntiguaAndBarbuda = 'ag',\r\n\tArgentina = 'ar',\r\n\tArmenia = 'am',\r\n\tAruba = 'aw',\r\n\tAustralia = 'au',\r\n\tAustria = 'at',\r\n\tAzerbaijan = 'az',\r\n\tBahamas = 'bs',\r\n\tBahrain = 'bh',\r\n\tBangladesh = 'bd',\r\n\tBarbados = 'bb',\r\n\tBelarus = 'by',\r\n\tBelgium = 'be',\r\n\tBelize = 'bz',\r\n\tBenin = 'bj',\r\n\tBermuda = 'bm',\r\n\tBhutan = 'bt',\r\n\tBolivia = 'bo',\r\n\tBosniaAndHerzegovina = 'ba',\r\n\tBotswana = 'bw',\r\n\tBrazil = 'br',\r\n\tBritishIndianOceanTerritory = 'io',\r\n\tBritishVirginIslands = 'vg',\r\n\tBrunei = 'bn',\r\n\tBulgaria = 'bg',\r\n\tBurkinaFaso = 'bf',\r\n\tBurundi = 'bi',\r\n\tCambodia = 'kh',\r\n\tCameroon = 'cm',\r\n\tCanada = 'ca',\r\n\tCapeVerde = 'cv',\r\n\tCaribbeanNetherlands = 'bq',\r\n\tCaymanIslands = 'ky',\r\n\tCentralAfricanRepublic = 'cf',\r\n\tChad = 'td',\r\n\tChile = 'cl',\r\n\tChina = 'cn',\r\n\tChristmasIsland = 'cx',\r\n\tCocos = 'cc',\r\n\tColombia = 'co',\r\n\tComoros = 'km',\r\n\tCongoDRCJamhuriYaKidemokrasiaYaKongo = 'cd',\r\n\tCongoRepublicCongoBrazzaville = 'cg',\r\n\tCookIslands = 'ck',\r\n\tCostaRica = 'cr',\r\n\tCÃ´teDIvoire = 'ci',\r\n\tCroatia = 'hr',\r\n\tCuba = 'cu',\r\n\tCuraÃ§ao = 'cw',\r\n\tCyprus = 'cy',\r\n\tCzechRepublic = 'cz',\r\n\tDenmark = 'dk',\r\n\tDjibouti = 'dj',\r\n\tDominica = 'dm',\r\n\tDominicanRepublic = 'do',\r\n\tEcuador = 'ec',\r\n\tEgypt = 'eg',\r\n\tElSalvador = 'sv',\r\n\tEquatorialGuinea = 'gq',\r\n\tEritrea = 'er',\r\n\tEstonia = 'ee',\r\n\tEthiopia = 'et',\r\n\tFalklandIslands = 'fk',\r\n\tFaroeIslands = 'fo',\r\n\tFiji = 'fj',\r\n\tFinland = 'fi',\r\n\tFrance = 'fr',\r\n\tFrenchGuiana = 'gf',\r\n\tFrenchPolynesia = 'pf',\r\n\tGabon = 'ga',\r\n\tGambia = 'gm',\r\n\tGeorgia = 'ge',\r\n\tGermany = 'de',\r\n\tGhana = 'gh',\r\n\tGibraltar = 'gi',\r\n\tGreece = 'gr',\r\n\tGreenland = 'gl',\r\n\tGrenada = 'gd',\r\n\tGuadeloupe = 'gp',\r\n\tGuam = 'gu',\r\n\tGuatemala = 'gt',\r\n\tGuernsey = 'gg',\r\n\tGuinea = 'gn',\r\n\tGuineaBissau = 'gw',\r\n\tGuyana = 'gy',\r\n\tHaiti = 'ht',\r\n\tHonduras = 'hn',\r\n\tHongKong = 'hk',\r\n\tHungary = 'hu',\r\n\tIceland = 'is',\r\n\tIndia = 'in',\r\n\tIndonesia = 'id',\r\n\tIran = 'ir',\r\n\tIraq = 'iq',\r\n\tIreland = 'ie',\r\n\tIsleOfMan = 'im',\r\n\tIsrael = 'il',\r\n\tItaly = 'it',\r\n\tJamaica = 'jm',\r\n\tJapan = 'jp',\r\n\tJersey = 'je',\r\n\tJordan = 'jo',\r\n\tKazakhstan = 'kz',\r\n\tKenya = 'ke',\r\n\tKiribati = 'ki',\r\n\tKosovo = 'xk',\r\n\tKuwait = 'kw',\r\n\tKyrgyzstan = 'kg',\r\n\tLaos = 'la',\r\n\tLatvia = 'lv',\r\n\tLebanon = 'lb',\r\n\tLesotho = 'ls',\r\n\tLiberia = 'lr',\r\n\tLibya = 'ly',\r\n\tLiechtenstein = 'li',\r\n\tLithuania = 'lt',\r\n\tLuxembourg = 'lu',\r\n\tMacau = 'mo',\r\n\tMacedonia = 'mk',\r\n\tMadagascar = 'mg',\r\n\tMalawi = 'mw',\r\n\tMalaysia = 'my',\r\n\tMaldives = 'mv',\r\n\tMali = 'ml',\r\n\tMalta = 'mt',\r\n\tMarshallIslands = 'mh',\r\n\tMartinique = 'mq',\r\n\tMauritania = 'mr',\r\n\tMauritius = 'mu',\r\n\tMayotte = 'yt',\r\n\tMexico = 'mx',\r\n\tMicronesia = 'fm',\r\n\tMoldova = 'md',\r\n\tMonaco = 'mc',\r\n\tMongolia = 'mn',\r\n\tMontenegro = 'me',\r\n\tMontserrat = 'ms',\r\n\tMorocco = 'ma',\r\n\tMozambique = 'mz',\r\n\tMyanmar = 'mm',\r\n\tNamibia = 'na',\r\n\tNauru = 'nr',\r\n\tNepal = 'np',\r\n\tNetherlands = 'nl',\r\n\tNewCaledonia = 'nc',\r\n\tNewZealand = 'nz',\r\n\tNicaragua = 'ni',\r\n\tNiger = 'ne',\r\n\tNigeria = 'ng',\r\n\tNiue = 'nu',\r\n\tNorfolkIsland = 'nf',\r\n\tNorthKorea = 'kp',\r\n\tNorthernMarianaIslands = 'mp',\r\n\tNorway = 'no',\r\n\tOman = 'om',\r\n\tPakistan = 'pk',\r\n\tPalau = 'pw',\r\n\tPalestine = 'ps',\r\n\tPanama = 'pa',\r\n\tPapuaNewGuinea = 'pg',\r\n\tParaguay = 'py',\r\n\tPeru = 'pe',\r\n\tPhilippines = 'ph',\r\n\tPoland = 'pl',\r\n\tPortugal = 'pt',\r\n\tPuertoRico = 'pr',\r\n\tQatar = 'qa',\r\n\tRÃ©union = 're',\r\n\tRomania = 'ro',\r\n\tRussia = 'ru',\r\n\tRwanda = 'rw',\r\n\tSaintBarthÃ©lemy = 'bl',\r\n\tSaintHelena = 'sh',\r\n\tSaintKittsAndNevis = 'kn',\r\n\tSaintLucia = 'lc',\r\n\tSaintMartin = 'mf',\r\n\tSaintPierreAndMiquelon = 'pm',\r\n\tSaintVincentAndTheGrenadines = 'vc',\r\n\tSamoa = 'ws',\r\n\tSanMarino = 'sm',\r\n\tSÃ£oTomÃ©AndPrÃ­ncipe = 'st',\r\n\tSaudiArabia = 'sa',\r\n\tSenegal = 'sn',\r\n\tSerbia = 'rs',\r\n\tSeychelles = 'sc',\r\n\tSierraLeone = 'sl',\r\n\tSingapore = 'sg',\r\n\tSintMaarten = 'sx',\r\n\tSlovakia = 'sk',\r\n\tSlovenia = 'si',\r\n\tSolomonIslands = 'sb',\r\n\tSomalia = 'so',\r\n\tSouthAfrica = 'za',\r\n\tSouthKorea = 'kr',\r\n\tSouthSudan = 'ss',\r\n\tSpain = 'es',\r\n\tSriLanka = 'lk',\r\n\tSudan = 'sd',\r\n\tSuriname = 'sr',\r\n\tSvalbardAndJanMayen = 'sj',\r\n\tSwaziland = 'sz',\r\n\tSweden = 'se',\r\n\tSwitzerland = 'ch',\r\n\tSyria = 'sy',\r\n\tTaiwan = 'tw',\r\n\tTajikistan = 'tj',\r\n\tTanzania = 'tz',\r\n\tThailand = 'th',\r\n\tTimorLeste = 'tl',\r\n\tTogo = 'tg',\r\n\tTokelau = 'tk',\r\n\tTonga = 'to',\r\n\tTrinidadAndTobago = 'tt',\r\n\tTunisia = 'tn',\r\n\tTurkey = 'tr',\r\n\tTurkmenistan = 'tm',\r\n\tTurksAndCaicosIslands = 'tc',\r\n\tTuvalu = 'tv',\r\n\tUSVirginIslands = 'vi',\r\n\tUganda = 'ug',\r\n\tUkraine = 'ua',\r\n\tUnitedArabEmirates = 'ae',\r\n\tUnitedKingdom = 'gb',\r\n\tUnitedStates = 'us',\r\n\tUruguay = 'uy',\r\n\tUzbekistan = 'uz',\r\n\tVanuatu = 'vu',\r\n\tVaticanCity = 'va',\r\n\tVenezuela = 've',\r\n\tVietnam = 'vn',\r\n\tWallisAndFutuna = 'wf',\r\n\tWesternSahara = 'eh',\r\n\tYemen = 'ye',\r\n\tZambia = 'zm',\r\n\tZimbabwe = 'zw',\r\n\tÃlandIslands = 'ax',\r\n}\r\n","import { CountryISO } from '../enums/country-iso.enum';\r\n\r\nexport class CountryCode {\r\n\tpublic allCountries = [\r\n\t\t[\r\n\t\t\t'Afghanistan (â«Ø§ÙØºØ§ÙØ³ØªØ§Ùâ¬â)',\r\n\t\t\tCountryISO.Afghanistan,\r\n\t\t\t'93'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Albania (ShqipÃ«ri)',\r\n\t\t\tCountryISO.Albania,\r\n\t\t\t'355'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Algeria (â«Ø§ÙØ¬Ø²Ø§Ø¦Ø±â¬â)',\r\n\t\t\tCountryISO.Algeria,\r\n\t\t\t'213'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'American Samoa',\r\n\t\t\t'as',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'684',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Andorra',\r\n\t\t\tCountryISO.Andorra,\r\n\t\t\t'376'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Angola',\r\n\t\t\tCountryISO.Angola,\r\n\t\t\t'244'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Anguilla',\r\n\t\t\t'ai',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'264',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Antigua and Barbuda',\r\n\t\t\t'ag',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'268',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Argentina',\r\n\t\t\tCountryISO.Argentina,\r\n\t\t\t'54'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Armenia (ÕÕ¡ÕµÕ¡Õ½Õ¿Õ¡Õ¶)',\r\n\t\t\tCountryISO.Armenia,\r\n\t\t\t'374'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Aruba',\r\n\t\t\tCountryISO.Aruba,\r\n\t\t\t'297'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Australia',\r\n\t\t\tCountryISO.Australia,\r\n\t\t\t'61',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Austria (Ãsterreich)',\r\n\t\t\tCountryISO.Austria,\r\n\t\t\t'43'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Azerbaijan (AzÉrbaycan)',\r\n\t\t\tCountryISO.Azerbaijan,\r\n\t\t\t'994'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bahamas',\r\n\t\t\t'bs',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'242',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bahrain (â«Ø§ÙØ¨Ø­Ø±ÙÙâ¬â)',\r\n\t\t\tCountryISO.Bahrain,\r\n\t\t\t'973'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bangladesh (à¦¬à¦¾à¦à¦²à¦¾à¦¦à§à¦¶)',\r\n\t\t\tCountryISO.Bangladesh,\r\n\t\t\t'880'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Barbados',\r\n\t\t\t'bb',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'246',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Belarus (ÐÐµÐ»Ð°ÑÑÑÑ)',\r\n\t\t\tCountryISO.Belarus,\r\n\t\t\t'375'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Belgium (BelgiÃ«)',\r\n\t\t\tCountryISO.Belgium,\r\n\t\t\t'32'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Belize',\r\n\t\t\tCountryISO.Belize,\r\n\t\t\t'501'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Benin (BÃ©nin)',\r\n\t\t\tCountryISO.Benin,\r\n\t\t\t'229'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bermuda',\r\n\t\t\t'bm',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'441',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bhutan (à½ à½à¾²à½´à½)',\r\n\t\t\tCountryISO.Bhutan,\r\n\t\t\t'975'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bolivia',\r\n\t\t\tCountryISO.Bolivia,\r\n\t\t\t'591'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bosnia and Herzegovina (ÐÐ¾ÑÐ½Ð° Ð¸ Ð¥ÐµÑÑÐµÐ³Ð¾Ð²Ð¸Ð½Ð°)',\r\n\t\t\tCountryISO.BosniaAndHerzegovina,\r\n\t\t\t'387'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Botswana',\r\n\t\t\tCountryISO.Botswana,\r\n\t\t\t'267'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Brazil (Brasil)',\r\n\t\t\tCountryISO.Brazil,\r\n\t\t\t'55'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'British Indian Ocean Territory',\r\n\t\t\tCountryISO.BritishIndianOceanTerritory,\r\n\t\t\t'246'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'British Virgin Islands',\r\n\t\t\t'vg',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'284',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Brunei',\r\n\t\t\tCountryISO.Brunei,\r\n\t\t\t'673'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bulgaria (ÐÑÐ»Ð³Ð°ÑÐ¸Ñ)',\r\n\t\t\tCountryISO.Bulgaria,\r\n\t\t\t'359'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Burkina Faso',\r\n\t\t\tCountryISO.BurkinaFaso,\r\n\t\t\t'226'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Burundi (Uburundi)',\r\n\t\t\tCountryISO.Burundi,\r\n\t\t\t'257'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cambodia (ááááá»áá¶)',\r\n\t\t\tCountryISO.Cambodia,\r\n\t\t\t'855'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cameroon (Cameroun)',\r\n\t\t\tCountryISO.Cameroon,\r\n\t\t\t'237'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Canada',\r\n\t\t\tCountryISO.Canada,\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416',\r\n\t\t\t\t'418', '431', '437', '438', '450', '506', '514', '519', '548', '579', '581', '587',\r\n\t\t\t\t'604', '613', '639', '647', '672', '705', '709', '742', '778', '780', '782', '807',\r\n\t\t\t\t'819', '825', '867', '873', '902', '905'\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cape Verde (Kabu Verdi)',\r\n\t\t\tCountryISO.CapeVerde,\r\n\t\t\t'238'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Caribbean Netherlands',\r\n\t\t\tCountryISO.CaribbeanNetherlands,\r\n\t\t\t'599',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cayman Islands',\r\n\t\t\t'ky',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'345',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Central African Republic (RÃ©publique centrafricaine)',\r\n\t\t\tCountryISO.CentralAfricanRepublic,\r\n\t\t\t'236'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Chad (Tchad)',\r\n\t\t\tCountryISO.Chad,\r\n\t\t\t'235'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Chile',\r\n\t\t\tCountryISO.Chile,\r\n\t\t\t'56'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'China (ä¸­å½)',\r\n\t\t\tCountryISO.China,\r\n\t\t\t'86'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Christmas Island',\r\n\t\t\tCountryISO.ChristmasIsland,\r\n\t\t\t'61',\r\n\t\t\t2\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cocos (Keeling) Islands',\r\n\t\t\tCountryISO.Cocos,\r\n\t\t\t'61',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Colombia',\r\n\t\t\tCountryISO.Colombia,\r\n\t\t\t'57'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Comoros (â«Ø¬Ø²Ø± Ø§ÙÙÙØ±â¬â)',\r\n\t\t\tCountryISO.Comoros,\r\n\t\t\t'269'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)',\r\n\t\t\tCountryISO.CongoDRCJamhuriYaKidemokrasiaYaKongo,\r\n\t\t\t'243'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Congo (Republic) (Congo-Brazzaville)',\r\n\t\t\tCountryISO.CongoRepublicCongoBrazzaville,\r\n\t\t\t'242'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cook Islands',\r\n\t\t\tCountryISO.CookIslands,\r\n\t\t\t'682'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Costa Rica',\r\n\t\t\tCountryISO.CostaRica,\r\n\t\t\t'506'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'CÃ´te dâIvoire',\r\n\t\t\tCountryISO.CÃ´teDIvoire,\r\n\t\t\t'225'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Croatia (Hrvatska)',\r\n\t\t\tCountryISO.Croatia,\r\n\t\t\t'385'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cuba',\r\n\t\t\tCountryISO.Cuba,\r\n\t\t\t'53'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'CuraÃ§ao',\r\n\t\t\tCountryISO.CuraÃ§ao,\r\n\t\t\t'599',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cyprus (ÎÏÏÏÎ¿Ï)',\r\n\t\t\tCountryISO.Cyprus,\r\n\t\t\t'357'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Czech Republic (ÄeskÃ¡ republika)',\r\n\t\t\tCountryISO.CzechRepublic,\r\n\t\t\t'420'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Denmark (Danmark)',\r\n\t\t\tCountryISO.Denmark,\r\n\t\t\t'45'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Djibouti',\r\n\t\t\tCountryISO.Djibouti,\r\n\t\t\t'253'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Dominica',\r\n\t\t\tCountryISO.Dominica,\r\n\t\t\t'1767'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Dominican Republic (RepÃºblica Dominicana)',\r\n\t\t\tCountryISO.DominicanRepublic,\r\n\t\t\t'1',\r\n\t\t\t2,\r\n\t\t\t['809', '829', '849']\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ecuador',\r\n\t\t\tCountryISO.Ecuador,\r\n\t\t\t'593'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Egypt (â«ÙØµØ±â¬â)',\r\n\t\t\tCountryISO.Egypt,\r\n\t\t\t'20'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'El Salvador',\r\n\t\t\tCountryISO.ElSalvador,\r\n\t\t\t'503'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Equatorial Guinea (Guinea Ecuatorial)',\r\n\t\t\tCountryISO.EquatorialGuinea,\r\n\t\t\t'240'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Eritrea',\r\n\t\t\tCountryISO.Eritrea,\r\n\t\t\t'291'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Estonia (Eesti)',\r\n\t\t\tCountryISO.Estonia,\r\n\t\t\t'372'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ethiopia',\r\n\t\t\tCountryISO.Ethiopia,\r\n\t\t\t'251'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Falkland Islands (Islas Malvinas)',\r\n\t\t\tCountryISO.FalklandIslands,\r\n\t\t\t'500'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Faroe Islands (FÃ¸royar)',\r\n\t\t\tCountryISO.FaroeIslands,\r\n\t\t\t'298'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Fiji',\r\n\t\t\tCountryISO.Fiji,\r\n\t\t\t'679'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Finland (Suomi)',\r\n\t\t\tCountryISO.Finland,\r\n\t\t\t'358',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'France',\r\n\t\t\tCountryISO.France,\r\n\t\t\t'33'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'French Guiana (Guyane franÃ§aise)',\r\n\t\t\tCountryISO.FrenchGuiana,\r\n\t\t\t'594'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'French Polynesia (PolynÃ©sie franÃ§aise)',\r\n\t\t\tCountryISO.FrenchPolynesia,\r\n\t\t\t'689'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Gabon',\r\n\t\t\tCountryISO.Gabon,\r\n\t\t\t'241'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Gambia',\r\n\t\t\tCountryISO.Gambia,\r\n\t\t\t'220'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Georgia (á¡áá¥áá ááááá)',\r\n\t\t\tCountryISO.Georgia,\r\n\t\t\t'995'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Germany (Deutschland)',\r\n\t\t\tCountryISO.Germany,\r\n\t\t\t'49'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ghana (Gaana)',\r\n\t\t\tCountryISO.Ghana,\r\n\t\t\t'233'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Gibraltar',\r\n\t\t\tCountryISO.Gibraltar,\r\n\t\t\t'350'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Greece (ÎÎ»Î»Î¬Î´Î±)',\r\n\t\t\tCountryISO.Greece,\r\n\t\t\t'30'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Greenland (Kalaallit Nunaat)',\r\n\t\t\tCountryISO.Greenland,\r\n\t\t\t'299'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Grenada',\r\n\t\t\tCountryISO.Grenada,\r\n\t\t\t'1473'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guadeloupe',\r\n\t\t\tCountryISO.Guadeloupe,\r\n\t\t\t'590',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guam',\r\n\t\t\t'gu',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'671',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guatemala',\r\n\t\t\tCountryISO.Guatemala,\r\n\t\t\t'502'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guernsey',\r\n\t\t\tCountryISO.Guernsey,\r\n\t\t\t'44',\r\n\t\t\t1,\r\n\t\t\t[1481]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guinea (GuinÃ©e)',\r\n\t\t\tCountryISO.Guinea,\r\n\t\t\t'224'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guinea-Bissau (GuinÃ© Bissau)',\r\n\t\t\tCountryISO.GuineaBissau,\r\n\t\t\t'245'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guyana',\r\n\t\t\tCountryISO.Guyana,\r\n\t\t\t'592'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Haiti',\r\n\t\t\tCountryISO.Haiti,\r\n\t\t\t'509'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Honduras',\r\n\t\t\tCountryISO.Honduras,\r\n\t\t\t'504'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Hong Kong (é¦æ¸¯)',\r\n\t\t\tCountryISO.HongKong,\r\n\t\t\t'852'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Hungary (MagyarorszÃ¡g)',\r\n\t\t\tCountryISO.Hungary,\r\n\t\t\t'36'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Iceland (Ãsland)',\r\n\t\t\tCountryISO.Iceland,\r\n\t\t\t'354'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'India (à¤­à¤¾à¤°à¤¤)',\r\n\t\t\tCountryISO.India,\r\n\t\t\t'91'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Indonesia',\r\n\t\t\tCountryISO.Indonesia,\r\n\t\t\t'62'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Iran (â«Ø§ÛØ±Ø§Ùâ¬â)',\r\n\t\t\tCountryISO.Iran,\r\n\t\t\t'98'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Iraq (â«Ø§ÙØ¹Ø±Ø§Ùâ¬â)',\r\n\t\t\tCountryISO.Iraq,\r\n\t\t\t'964'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ireland',\r\n\t\t\tCountryISO.Ireland,\r\n\t\t\t'353'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Isle of Man',\r\n\t\t\tCountryISO.IsleOfMan,\r\n\t\t\t'44',\r\n\t\t\t2,\r\n\t\t\t[1624]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Israel (â«××©×¨××â¬â)',\r\n\t\t\tCountryISO.Israel,\r\n\t\t\t'972'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Italy (Italia)',\r\n\t\t\tCountryISO.Italy,\r\n\t\t\t'39',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Jamaica',\r\n\t\t\t'jm',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'876',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Japan (æ¥æ¬)',\r\n\t\t\tCountryISO.Japan,\r\n\t\t\t'81'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Jersey',\r\n\t\t\tCountryISO.Jersey,\r\n\t\t\t'44',\r\n\t\t\t3,\r\n\t\t\t[1534]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Jordan (â«Ø§ÙØ£Ø±Ø¯Ùâ¬â)',\r\n\t\t\tCountryISO.Jordan,\r\n\t\t\t'962'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kazakhstan (ÐÐ°Ð·Ð°ÑÑÑÐ°Ð½)',\r\n\t\t\tCountryISO.Kazakhstan,\r\n\t\t\t'7',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kenya',\r\n\t\t\tCountryISO.Kenya,\r\n\t\t\t'254'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kiribati',\r\n\t\t\tCountryISO.Kiribati,\r\n\t\t\t'686'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kosovo',\r\n\t\t\tCountryISO.Kosovo,\r\n\t\t\t'383'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kuwait (â«Ø§ÙÙÙÙØªâ¬â)',\r\n\t\t\tCountryISO.Kuwait,\r\n\t\t\t'965'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kyrgyzstan (ÐÑÑÐ³ÑÐ·ÑÑÐ°Ð½)',\r\n\t\t\tCountryISO.Kyrgyzstan,\r\n\t\t\t'996'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Laos (àº¥àº²àº§)',\r\n\t\t\tCountryISO.Laos,\r\n\t\t\t'856'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Latvia (Latvija)',\r\n\t\t\tCountryISO.Latvia,\r\n\t\t\t'371'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Lebanon (â«ÙØ¨ÙØ§Ùâ¬â)',\r\n\t\t\tCountryISO.Lebanon,\r\n\t\t\t'961'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Lesotho',\r\n\t\t\tCountryISO.Lesotho,\r\n\t\t\t'266'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Liberia',\r\n\t\t\tCountryISO.Liberia,\r\n\t\t\t'231'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Libya (â«ÙÙØ¨ÙØ§â¬â)',\r\n\t\t\tCountryISO.Libya,\r\n\t\t\t'218'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Liechtenstein',\r\n\t\t\tCountryISO.Liechtenstein,\r\n\t\t\t'423'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Lithuania (Lietuva)',\r\n\t\t\tCountryISO.Lithuania,\r\n\t\t\t'370'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Luxembourg',\r\n\t\t\tCountryISO.Luxembourg,\r\n\t\t\t'352'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Macau (æ¾³é)',\r\n\t\t\tCountryISO.Macau,\r\n\t\t\t'853'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Macedonia (FYROM) (ÐÐ°ÐºÐµÐ´Ð¾Ð½Ð¸ÑÐ°)',\r\n\t\t\tCountryISO.Macedonia,\r\n\t\t\t'389'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Madagascar (Madagasikara)',\r\n\t\t\tCountryISO.Madagascar,\r\n\t\t\t'261'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Malawi',\r\n\t\t\tCountryISO.Malawi,\r\n\t\t\t'265'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Malaysia',\r\n\t\t\tCountryISO.Malaysia,\r\n\t\t\t'60'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Maldives',\r\n\t\t\tCountryISO.Maldives,\r\n\t\t\t'960'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mali',\r\n\t\t\tCountryISO.Mali,\r\n\t\t\t'223'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Malta',\r\n\t\t\tCountryISO.Malta,\r\n\t\t\t'356'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Marshall Islands',\r\n\t\t\tCountryISO.MarshallIslands,\r\n\t\t\t'692'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Martinique',\r\n\t\t\tCountryISO.Martinique,\r\n\t\t\t'596'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mauritania (â«ÙÙØ±ÙØªØ§ÙÙØ§â¬â)',\r\n\t\t\tCountryISO.Mauritania,\r\n\t\t\t'222'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mauritius (Moris)',\r\n\t\t\tCountryISO.Mauritius,\r\n\t\t\t'230'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mayotte',\r\n\t\t\tCountryISO.Mayotte,\r\n\t\t\t'262',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mexico (MÃ©xico)',\r\n\t\t\tCountryISO.Mexico,\r\n\t\t\t'52'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Micronesia',\r\n\t\t\tCountryISO.Micronesia,\r\n\t\t\t'691'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Moldova (Republica Moldova)',\r\n\t\t\tCountryISO.Moldova,\r\n\t\t\t'373'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Monaco',\r\n\t\t\tCountryISO.Monaco,\r\n\t\t\t'377'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mongolia (ÐÐ¾Ð½Ð³Ð¾Ð»)',\r\n\t\t\tCountryISO.Mongolia,\r\n\t\t\t'976'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Montenegro (Crna Gora)',\r\n\t\t\tCountryISO.Montenegro,\r\n\t\t\t'382'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Montserrat',\r\n\t\t\t'ms',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'664',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Morocco (â«Ø§ÙÙØºØ±Ø¨â¬â)',\r\n\t\t\tCountryISO.Morocco,\r\n\t\t\t'212',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mozambique (MoÃ§ambique)',\r\n\t\t\tCountryISO.Mozambique,\r\n\t\t\t'258'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Myanmar (Burma) (áá¼ááºáá¬)',\r\n\t\t\tCountryISO.Myanmar,\r\n\t\t\t'95'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Namibia (NamibiÃ«)',\r\n\t\t\tCountryISO.Namibia,\r\n\t\t\t'264'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nauru',\r\n\t\t\tCountryISO.Nauru,\r\n\t\t\t'674'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nepal (à¤¨à¥à¤ªà¤¾à¤²)',\r\n\t\t\tCountryISO.Nepal,\r\n\t\t\t'977'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Netherlands (Nederland)',\r\n\t\t\tCountryISO.Netherlands,\r\n\t\t\t'31'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'New Caledonia (Nouvelle-CalÃ©donie)',\r\n\t\t\tCountryISO.NewCaledonia,\r\n\t\t\t'687'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'New Zealand',\r\n\t\t\tCountryISO.NewZealand,\r\n\t\t\t'64'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nicaragua',\r\n\t\t\tCountryISO.Nicaragua,\r\n\t\t\t'505'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Niger (Nijar)',\r\n\t\t\tCountryISO.Niger,\r\n\t\t\t'227'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nigeria',\r\n\t\t\tCountryISO.Nigeria,\r\n\t\t\t'234'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Niue',\r\n\t\t\tCountryISO.Niue,\r\n\t\t\t'683'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Norfolk Island',\r\n\t\t\tCountryISO.NorfolkIsland,\r\n\t\t\t'672'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'North Korea (ì¡°ì  ë¯¼ì£¼ì£¼ì ì¸ë¯¼ ê³µíêµ­)',\r\n\t\t\tCountryISO.NorthKorea,\r\n\t\t\t'850'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Northern Mariana Islands',\r\n\t\t\tCountryISO.NorthernMarianaIslands,\r\n\t\t\t'1670'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Norway (Norge)',\r\n\t\t\tCountryISO.Norway,\r\n\t\t\t'47',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Oman (â«Ø¹ÙÙØ§Ùâ¬â)',\r\n\t\t\tCountryISO.Oman,\r\n\t\t\t'968'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Pakistan (â«Ù¾Ø§Ú©Ø³ØªØ§Ùâ¬â)',\r\n\t\t\tCountryISO.Pakistan,\r\n\t\t\t'92'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Palau',\r\n\t\t\tCountryISO.Palau,\r\n\t\t\t'680'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Palestine (â«ÙÙØ³Ø·ÙÙâ¬â)',\r\n\t\t\tCountryISO.Palestine,\r\n\t\t\t'970'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Panama (PanamÃ¡)',\r\n\t\t\tCountryISO.Panama,\r\n\t\t\t'507'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Papua New Guinea',\r\n\t\t\tCountryISO.PapuaNewGuinea,\r\n\t\t\t'675'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Paraguay',\r\n\t\t\tCountryISO.Paraguay,\r\n\t\t\t'595'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Peru (PerÃº)',\r\n\t\t\tCountryISO.Peru,\r\n\t\t\t'51'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Philippines',\r\n\t\t\tCountryISO.Philippines,\r\n\t\t\t'63'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Poland (Polska)',\r\n\t\t\tCountryISO.Poland,\r\n\t\t\t'48'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Portugal',\r\n\t\t\tCountryISO.Portugal,\r\n\t\t\t'351'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Puerto Rico',\r\n\t\t\tCountryISO.PuertoRico,\r\n\t\t\t'1',\r\n\t\t\t3,\r\n\t\t\t['787', '939']\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Qatar (â«ÙØ·Ø±â¬â)',\r\n\t\t\tCountryISO.Qatar,\r\n\t\t\t'974'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'RÃ©union (La RÃ©union)',\r\n\t\t\tCountryISO.RÃ©union,\r\n\t\t\t'262',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Romania (RomÃ¢nia)',\r\n\t\t\tCountryISO.Romania,\r\n\t\t\t'40'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Russia (Ð Ð¾ÑÑÐ¸Ñ)',\r\n\t\t\tCountryISO.Russia,\r\n\t\t\t'7',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Rwanda',\r\n\t\t\tCountryISO.Rwanda,\r\n\t\t\t'250'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint BarthÃ©lemy (Saint-BarthÃ©lemy)',\r\n\t\t\tCountryISO.SaintBarthÃ©lemy,\r\n\t\t\t'590',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Helena',\r\n\t\t\tCountryISO.SaintHelena,\r\n\t\t\t'290'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Kitts and Nevis',\r\n\t\t\tCountryISO.SaintKittsAndNevis,\r\n\t\t\t'1869'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Lucia',\r\n\t\t\t'lc',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'758',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Martin (Saint-Martin (partie franÃ§aise))',\r\n\t\t\tCountryISO.SaintMartin,\r\n\t\t\t'590',\r\n\t\t\t2\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)',\r\n\t\t\tCountryISO.SaintPierreAndMiquelon,\r\n\t\t\t'508'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Vincent and the Grenadines',\r\n\t\t\t'vc',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'784',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Samoa',\r\n\t\t\tCountryISO.Samoa,\r\n\t\t\t'685'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'San Marino',\r\n\t\t\tCountryISO.SanMarino,\r\n\t\t\t'378'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'SÃ£o TomÃ© and PrÃ­ncipe (SÃ£o TomÃ© e PrÃ­ncipe)',\r\n\t\t\tCountryISO.SÃ£oTomÃ©AndPrÃ­ncipe,\r\n\t\t\t'239'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saudi Arabia (â«Ø§ÙÙÙÙÙØ© Ø§ÙØ¹Ø±Ø¨ÙØ© Ø§ÙØ³Ø¹ÙØ¯ÙØ©â¬â)',\r\n\t\t\tCountryISO.SaudiArabia,\r\n\t\t\t'966'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Senegal (SÃ©nÃ©gal)',\r\n\t\t\tCountryISO.Senegal,\r\n\t\t\t'221'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Serbia (Ð¡ÑÐ±Ð¸ÑÐ°)',\r\n\t\t\tCountryISO.Serbia,\r\n\t\t\t'381'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Seychelles',\r\n\t\t\tCountryISO.Seychelles,\r\n\t\t\t'248'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sierra Leone',\r\n\t\t\tCountryISO.SierraLeone,\r\n\t\t\t'232'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Singapore',\r\n\t\t\tCountryISO.Singapore,\r\n\t\t\t'65'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sint Maarten',\r\n\t\t\t'sx',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'721',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Slovakia (Slovensko)',\r\n\t\t\tCountryISO.Slovakia,\r\n\t\t\t'421'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Slovenia (Slovenija)',\r\n\t\t\tCountryISO.Slovenia,\r\n\t\t\t'386'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Solomon Islands',\r\n\t\t\tCountryISO.SolomonIslands,\r\n\t\t\t'677'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Somalia (Soomaaliya)',\r\n\t\t\tCountryISO.Somalia,\r\n\t\t\t'252'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'South Africa',\r\n\t\t\tCountryISO.SouthAfrica,\r\n\t\t\t'27'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'South Korea (ëíë¯¼êµ­)',\r\n\t\t\tCountryISO.SouthKorea,\r\n\t\t\t'82'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'South Sudan (â«Ø¬ÙÙØ¨ Ø§ÙØ³ÙØ¯Ø§Ùâ¬â)',\r\n\t\t\tCountryISO.SouthSudan,\r\n\t\t\t'211'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Spain (EspaÃ±a)',\r\n\t\t\tCountryISO.Spain,\r\n\t\t\t'34'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sri Lanka (à·à·âà¶»à· à¶½à¶à¶à·à·)',\r\n\t\t\tCountryISO.SriLanka,\r\n\t\t\t'94'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sudan (â«Ø§ÙØ³ÙØ¯Ø§Ùâ¬â)',\r\n\t\t\tCountryISO.Sudan,\r\n\t\t\t'249'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Suriname',\r\n\t\t\tCountryISO.Suriname,\r\n\t\t\t'597'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Svalbard and Jan Mayen',\r\n\t\t\tCountryISO.SvalbardAndJanMayen,\r\n\t\t\t'47',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Swaziland',\r\n\t\t\tCountryISO.Swaziland,\r\n\t\t\t'268'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sweden (Sverige)',\r\n\t\t\tCountryISO.Sweden,\r\n\t\t\t'46'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Switzerland (Schweiz)',\r\n\t\t\tCountryISO.Switzerland,\r\n\t\t\t'41'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Syria (â«Ø³ÙØ±ÙØ§â¬â)',\r\n\t\t\tCountryISO.Syria,\r\n\t\t\t'963'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Taiwan (å°ç£)',\r\n\t\t\tCountryISO.Taiwan,\r\n\t\t\t'886'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tajikistan',\r\n\t\t\tCountryISO.Tajikistan,\r\n\t\t\t'992'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tanzania',\r\n\t\t\tCountryISO.Tanzania,\r\n\t\t\t'255'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Thailand (à¹à¸à¸¢)',\r\n\t\t\tCountryISO.Thailand,\r\n\t\t\t'66'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Timor-Leste',\r\n\t\t\tCountryISO.TimorLeste,\r\n\t\t\t'670'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Togo',\r\n\t\t\tCountryISO.Togo,\r\n\t\t\t'228'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tokelau',\r\n\t\t\tCountryISO.Tokelau,\r\n\t\t\t'690'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tonga',\r\n\t\t\tCountryISO.Tonga,\r\n\t\t\t'676'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Trinidad and Tobago',\r\n\t\t\t'tt',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'868',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tunisia (â«ØªÙÙØ³â¬â)',\r\n\t\t\tCountryISO.Tunisia,\r\n\t\t\t'216'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Turkey (TÃ¼rkiye)',\r\n\t\t\tCountryISO.Turkey,\r\n\t\t\t'90'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Turkmenistan',\r\n\t\t\tCountryISO.Turkmenistan,\r\n\t\t\t'993'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Turks and Caicos Islands',\r\n\t\t\tCountryISO.TurksAndCaicosIslands,\r\n\t\t\t'1649'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tuvalu',\r\n\t\t\tCountryISO.Tuvalu,\r\n\t\t\t'688'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'U.S. Virgin Islands',\r\n\t\t\t'vi',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'340',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Uganda',\r\n\t\t\tCountryISO.Uganda,\r\n\t\t\t'256'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ukraine (Ð£ÐºÑÐ°ÑÐ½Ð°)',\r\n\t\t\tCountryISO.Ukraine,\r\n\t\t\t'380'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'United Arab Emirates (â«Ø§ÙØ¥ÙØ§Ø±Ø§Øª Ø§ÙØ¹Ø±Ø¨ÙØ© Ø§ÙÙØªØ­Ø¯Ø©â¬â)',\r\n\t\t\tCountryISO.UnitedArabEmirates,\r\n\t\t\t'971'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'United Kingdom',\r\n\t\t\tCountryISO.UnitedKingdom,\r\n\t\t\t'44',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'United States',\r\n\t\t\tCountryISO.UnitedStates,\r\n\t\t\t'1',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Uruguay',\r\n\t\t\tCountryISO.Uruguay,\r\n\t\t\t'598'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Uzbekistan (OÊ»zbekiston)',\r\n\t\t\tCountryISO.Uzbekistan,\r\n\t\t\t'998'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Vanuatu',\r\n\t\t\tCountryISO.Vanuatu,\r\n\t\t\t'678'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Vatican City (CittÃ  del Vaticano)',\r\n\t\t\tCountryISO.VaticanCity,\r\n\t\t\t'39',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Venezuela',\r\n\t\t\tCountryISO.Venezuela,\r\n\t\t\t'58'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Vietnam (Viá»t Nam)',\r\n\t\t\tCountryISO.Vietnam,\r\n\t\t\t'84'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Wallis and Futuna',\r\n\t\t\tCountryISO.WallisAndFutuna,\r\n\t\t\t'681'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Western Sahara (â«Ø§ÙØµØ­Ø±Ø§Ø¡ Ø§ÙØºØ±Ø¨ÙØ©â¬â)',\r\n\t\t\tCountryISO.WesternSahara,\r\n\t\t\t'212',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Yemen (â«Ø§ÙÙÙÙâ¬â)',\r\n\t\t\tCountryISO.Yemen,\r\n\t\t\t'967'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Zambia',\r\n\t\t\tCountryISO.Zambia,\r\n\t\t\t'260'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Zimbabwe',\r\n\t\t\tCountryISO.Zimbabwe,\r\n\t\t\t'263'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ãland Islands',\r\n\t\t\tCountryISO.ÃlandIslands,\r\n\t\t\t'358',\r\n\t\t\t1\r\n\t\t]\r\n\t];\r\n}","import { FormControl } from '@angular/forms';\r\nimport * as lpn from 'google-libphonenumber';\r\n\r\nexport const phoneNumberValidator = (control: FormControl) => {\r\n\tconst id = control.value && control.value.id ? control.value.id : 'phone';\r\n\tconst el = document.getElementById(id) ? document.getElementById(id) : undefined;\r\n\tif (el) {\r\n\t\tconst isCheckValidation = el.getAttribute('validation');\r\n\t\tif (isCheckValidation === 'true') {\r\n\t\t\tconst isRequired = control.errors && control.errors.required === true;\r\n\t\t\tconst error = { validatePhoneNumber: { valid: false } };\r\n\t\t\tlet number: lpn.PhoneNumber;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tnumber = lpn.PhoneNumberUtil.getInstance().parse(control.value.number, control.value.countryCode);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (isRequired === true) { return error; }\r\n\t\t\t}\r\n\r\n\t\t\tif (control.value) {\r\n\t\t\t\tif (!number) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!lpn.PhoneNumberUtil.getInstance().isValidNumberForRegion(number, control.value.countryCode)) {\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (isCheckValidation === 'false') {\r\n\t\t\tcontrol.clearValidators();\r\n\t\t}\r\n\t}\r\n\treturn;\r\n\r\n};\r\n","export enum SearchCountryField {\r\n\tDialCode = 'dialCode',\r\n\tIso2 = 'iso2',\r\n\tName = 'name',\r\n\tAll = 'all'\r\n}\r\n","import { Component, OnInit, forwardRef, Input, ViewChild, ElementRef, SimpleChanges, OnChanges, Output, EventEmitter } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { CountryCode } from './data/country-code';\r\nimport { phoneNumberValidator } from './ngx-intl-tel-input.validator';\r\nimport { Country } from './model/country.model';\r\nimport * as lpn from 'google-libphonenumber';\r\nimport { SearchCountryField } from './enums/search-country-field.enum';\r\nimport { TooltipLabel } from './enums/tooltip-label.enum';\r\nimport { CountryISO } from './enums/country-iso.enum';\r\n\r\n@Component({\r\n\tselector: 'ngx-intl-tel-input',\r\n\ttemplateUrl: './ngx-intl-tel-input.component.html',\r\n\tstyleUrls: ['./ngx-intl-tel-input.component.css'],\r\n\tproviders: [\r\n\t\tCountryCode,\r\n\t\t{\r\n\t\t\tprovide: NG_VALUE_ACCESSOR,\r\n\t\t\t// tslint:disable-next-line:no-forward-ref\r\n\t\t\tuseExisting: forwardRef(() => NgxIntlTelInputComponent),\r\n\t\t\tmulti: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tprovide: NG_VALIDATORS,\r\n\t\t\tuseValue: phoneNumberValidator,\r\n\t\t\tmulti: true,\r\n\t\t}\r\n\t]\r\n})\r\nexport class NgxIntlTelInputComponent implements OnInit, OnChanges {\r\n\r\n\t@Input() value = '';\r\n\t@Input() preferredCountries: Array<string> = [];\r\n\t@Input() enablePlaceholder = true;\r\n\t@Input() cssClass = 'form-control';\r\n\t@Input() onlyCountries: Array<string> = [];\r\n\t@Input() enableAutoCountrySelect = true;\r\n\t@Input() searchCountryFlag = false;\r\n\t@Input() searchCountryField: SearchCountryField[] = [SearchCountryField.All];\r\n\t@Input() searchCountryPlaceholder = 'Search Country';\r\n\t@Input() maxLength = '';\r\n\t@Input() tooltipField: TooltipLabel;\r\n\t@Input() selectFirstCountry = true;\r\n\t@Input() selectedCountryISO: CountryISO;\r\n\t@Input() phoneValidation = true;\r\n\t@Input() id = 'phone';\r\n\t@Input() enableCustomPlaceholder = false;\r\n\t@Input() customPlaceholder = 'Phone Number';\r\n\t@Input() readOnly = false;\r\n\r\n\t@Output() readonly countryChange = new EventEmitter<Country>();\r\n\r\n\tselectedCountry: Country = {\r\n\t\tareaCodes: undefined,\r\n\t\tdialCode: '',\r\n\t\tflagClass: '',\r\n\t\tiso2: '',\r\n\t\tname: '',\r\n\t\tplaceHolder: '',\r\n\t\tpriority: 0\r\n\t};\r\n\r\n\t// display the country dial code next to the selected flag\r\n\t@Input() separateDialCode = false;\r\n\tseparateDialCodeClass: string;\r\n\r\n\tphoneNumber = '';\r\n\tallCountries: Array<Country> = [];\r\n\tpreferredCountriesInDropDown: Array<Country> = [];\r\n\t// Has to be 'any' to prevent a need to install @types/google-libphonenumber by the package user...\r\n\tphoneUtil: any = lpn.PhoneNumberUtil.getInstance();\r\n\tdisabled = false;\r\n\terrors: Array<any> = ['Phone number is required.'];\r\n\tcountrySearchText = '';\r\n\r\n\t@ViewChild('countryList', { static: false }) countryList: ElementRef;\r\n\r\n\tonTouched = () => { };\r\n\tpropagateChange = (_: any) => { };\r\n\r\n\tconstructor(\r\n\t\tprivate countryCodeData: CountryCode\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tngOnChanges(changes: SimpleChanges) {\r\n\t\tif (this.allCountries && changes['selectedCountryISO']\r\n\t\t\t&& changes['selectedCountryISO'].currentValue !== changes['selectedCountryISO'].previousValue) {\r\n\t\t\tthis.getSelectedCountry();\r\n\t\t}\r\n\t\tif (changes.preferredCountries) {\r\n\t\t\tthis.getPreferredCountries();\r\n\t\t}\r\n\t\tthis.checkSeparateDialCodeStyle();\r\n\t}\r\n\r\n\t/*\r\n\t\tThis is a wrapper method to avoid calling this.ngOnInit() in writeValue().\r\n\t\tRef: http://codelyzer.com/rules/no-life-cycle-call/\r\n\t*/\r\n\tinit() {\r\n\t\tthis.fetchCountryData();\r\n\t\tif (this.preferredCountries.length) {\r\n\t\t\tthis.getPreferredCountries();\r\n\t\t}\r\n\t\tif (this.onlyCountries.length) {\r\n\t\t\tthis.allCountries = this.allCountries.filter(c => this.onlyCountries.includes(c.iso2));\r\n\t\t}\r\n\t\tif (this.selectFirstCountry) {\r\n\t\t\tif (this.preferredCountriesInDropDown.length) {\r\n\t\t\t\tthis.setSelectedCountry(this.preferredCountriesInDropDown[0]);\r\n\t\t\t} else {\r\n\t\t\t\tthis.setSelectedCountry(this.allCountries[0]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.getSelectedCountry();\r\n\t\tthis.checkSeparateDialCodeStyle();\r\n\t}\r\n\r\n\tgetPreferredCountries() {\r\n\t\tif (this.preferredCountries.length) {\r\n\t\t\tthis.preferredCountriesInDropDown = [];\r\n\t\t\tthis.preferredCountries.forEach(iso2 => {\r\n\t\t\t\tconst preferredCountry = this.allCountries.filter((c) => {\r\n\t\t\t\t\treturn c.iso2 === iso2;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.preferredCountriesInDropDown.push(preferredCountry[0]);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tgetSelectedCountry() {\r\n\t\tif (this.selectedCountryISO) {\r\n\t\t\tthis.selectedCountry = this.allCountries.find(c => { return (c.iso2.toLowerCase() === this.selectedCountryISO.toLowerCase()); });\r\n\t\t\tif (this.selectedCountry) {\r\n\t\t\t\tif (this.phoneNumber) {\r\n\t\t\t\t\tthis.onPhoneNumberChange();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.propagateChange(undefined);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetSelectedCountry(country: Country) {\r\n\t\tthis.selectedCountry = country;\r\n\t\tthis.countryChange.emit(country);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Search country based on country name, iso2, dialCode or all of them.\r\n\t */\r\n\tsearchCountry() {\r\n\t\tif (!this.countrySearchText) {\r\n\t\t\tthis.countryList.nativeElement.querySelector('.country-list li').scrollIntoView({\r\n\t\t\t\tbehavior: 'smooth',\r\n\t\t\t\tblock: 'nearest',\r\n\t\t\t\tinline: 'nearest'\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst countrySearchTextLower = this.countrySearchText.toLowerCase();\r\n\t\tconst country = this.allCountries.filter(c => {\r\n\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.All) > -1) {\r\n\t\t\t\t// Search in all fields\r\n\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\r\n\t\t\t\t\treturn c;\r\n\t\t\t\t}\r\n\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\r\n\t\t\t\t\treturn c;\r\n\t\t\t\t}\r\n\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\r\n\t\t\t\t\treturn c;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Or search by specific SearchCountryField(s)\r\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Iso2) > -1) {\r\n\t\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\r\n\t\t\t\t\t\treturn c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Name) > -1) {\r\n\t\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\r\n\t\t\t\t\t\treturn c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.DialCode) > -1) {\r\n\t\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\r\n\t\t\t\t\t\treturn c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (country.length > 0) {\r\n\t\t\tconst el = this.countryList.nativeElement.querySelector('#' + country[0].iso2);\r\n\t\t\tif (el) {\r\n\t\t\t\tel.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'nearest'  });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.checkSeparateDialCodeStyle();\r\n\t}\r\n\r\n\tpublic onPhoneNumberChange(): void {\r\n\t\tthis.value = this.phoneNumber;\r\n\r\n\t\tlet number: lpn.PhoneNumber;\r\n\t\ttry {\r\n\t\t\tnumber = this.phoneUtil.parse(this.phoneNumber, this.selectedCountry.iso2.toUpperCase());\r\n\t\t} catch (e) {\r\n\t\t}\r\n\r\n\t\tlet countryCode = this.selectedCountry.iso2;\r\n\t\t// auto select country based on the extension (and areaCode if needed) (e.g select Canada if number starts with +1 416)\r\n\t\tif (this.enableAutoCountrySelect) {\r\n\t\t\tcountryCode = number && number.getCountryCode()\r\n\t\t\t\t? this.getCountryIsoCode(number.getCountryCode(), number)\r\n\t\t\t\t: this.selectedCountry.iso2;\r\n\t\t\tif (countryCode && countryCode !== this.selectedCountry.iso2) {\r\n\t\t\t\tconst newCountry = this.allCountries.find(c => c.iso2 === countryCode);\r\n\t\t\t\tif (newCountry) {\r\n\t\t\t\t\tthis.selectedCountry = newCountry;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcountryCode = countryCode ? countryCode : this.selectedCountry.iso2;\r\n\r\n\t\tthis.checkSeparateDialCodeStyle();\r\n\r\n\t\tif (!this.value) {\r\n\t\t\tthis.propagateChange(undefined);\r\n\t\t} else {\r\n\t\t\tconst intlNo = number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL) : '';\r\n\r\n\t\t\t// parse phoneNumber if separate dial code is needed\r\n\t\t\tif (this.separateDialCode && intlNo) {\r\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\r\n\t\t\t}\r\n\r\n\t\t\tthis.propagateChange({\r\n\t\t\t\tnumber: this.value,\r\n\t\t\t\tinternationalNumber: intlNo,\r\n\t\t\t\tnationalNumber: number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL) : '',\r\n\t\t\t\tcountryCode: countryCode.toUpperCase(),\r\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\r\n\t\t\t\tid: this.id\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onCountrySelect(country: Country, el): void {\r\n\t\tthis.setSelectedCountry(country);\r\n\r\n\t\tthis.checkSeparateDialCodeStyle();\r\n\r\n\t\tif (this.phoneNumber && this.phoneNumber.length > 0) {\r\n\t\t\tthis.value = this.phoneNumber;\r\n\r\n\t\t\tlet number: lpn.PhoneNumber;\r\n\t\t\ttry {\r\n\t\t\t\tnumber = this.phoneUtil.parse(this.phoneNumber, this.selectedCountry.iso2.toUpperCase());\r\n\t\t\t} catch (e) {\r\n\t\t\t}\r\n\r\n\t\t\tconst intlNo = number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL) : '';\r\n\r\n\t\t\t// parse phoneNumber if separate dial code is needed\r\n\t\t\tif (this.separateDialCode && intlNo) {\r\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\r\n\t\t\t}\r\n\r\n\t\t\tthis.propagateChange({\r\n\t\t\t\tnumber: this.value,\r\n\t\t\t\tinternationalNumber: intlNo,\r\n\t\t\t\tnationalNumber: number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL) : '',\r\n\t\t\t\tcountryCode: this.selectedCountry.iso2.toUpperCase(),\r\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\r\n\t\t\t\tid: this.id\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.propagateChange(undefined);\r\n\t\t}\r\n\r\n\t\tel.focus();\r\n\t}\r\n\r\n\tpublic onInputKeyPress(event: KeyboardEvent): void {\r\n\t\tconst allowedChars = /[0-9\\+\\-\\ ]/;\r\n\t\tconst allowedCtrlChars = /[axcv]/; // Allows copy-pasting\r\n\t\tconst allowedOtherKeys = [\r\n\t\t\t'ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown',\r\n\t\t\t'Home', 'End', 'Insert', 'Delete', 'Backspace'\r\n\t\t];\r\n\r\n\t\tif (!allowedChars.test(event.key)\r\n\t\t\t&& !(event.ctrlKey && allowedCtrlChars.test(event.key))\r\n\t\t\t&& !(allowedOtherKeys.includes(event.key))) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected fetchCountryData(): void {\r\n\t\t/* Clearing the list to avoid duplicates (https://github.com/webcat12345/ngx-intl-tel-input/issues/248) */\r\n\t\tthis.allCountries = [];\r\n\r\n\t\tthis.countryCodeData.allCountries.forEach(c => {\r\n\t\t\tconst country: Country = {\r\n\t\t\t\tname: c[0].toString(),\r\n\t\t\t\tiso2: c[1].toString(),\r\n\t\t\t\tdialCode: c[2].toString(),\r\n\t\t\t\tpriority: +c[3] || 0,\r\n\t\t\t\tareaCodes: c[4] as string[] || undefined,\r\n\t\t\t\tflagClass: c[1].toString().toLocaleLowerCase(),\r\n\t\t\t\tplaceHolder: ''\r\n\t\t\t};\r\n\r\n\t\t\tif (this.enablePlaceholder) {\r\n\t\t\t\tcountry.placeHolder = this.getPhoneNumberPlaceHolder(country.iso2.toUpperCase());\r\n\t\t\t}\r\n\r\n\t\t\tthis.allCountries.push(country);\r\n\t\t});\r\n\t}\r\n\r\n\tprotected getPhoneNumberPlaceHolder(countryCode: string): string {\r\n\t\ttry {\r\n\t\t\treturn this.phoneUtil.format(this.phoneUtil.getExampleNumber(countryCode), lpn.PhoneNumberFormat.INTERNATIONAL);\r\n\t\t} catch (e) {\r\n\t\t\treturn e;\r\n\t\t}\r\n\t}\r\n\r\n\tregisterOnChange(fn: any): void {\r\n\t\tthis.propagateChange = fn;\r\n\t}\r\n\r\n\tregisterOnTouched(fn: any) {\r\n\t\tthis.onTouched = fn;\r\n\t}\r\n\r\n\tsetDisabledState(isDisabled: boolean): void {\r\n\t\tthis.disabled = isDisabled;\r\n\t}\r\n\r\n\twriteValue(obj: any): void {\r\n\t\tif (obj === undefined) {\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t\tthis.phoneNumber = obj;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.onPhoneNumberChange();\r\n\t\t}, 1);\r\n\t}\r\n\r\n\tprivate getCountryIsoCode(countryCode: number, number: lpn.PhoneNumber): string | undefined {\r\n\t\t// Will use this to match area code from the first numbers\r\n\t\tconst rawNumber = number['values_']['2'].toString();\r\n\t\t// List of all countries with countryCode (can be more than one. e.x. US, CA, DO, PR all have +1 countryCode)\r\n\t\tconst countries = this.allCountries.filter(c => c.dialCode === countryCode.toString());\r\n\t\t// Main country is the country, which has no areaCodes specified in country-code.ts file.\r\n\t\tconst mainCountry = countries.find(c => c.areaCodes === undefined);\r\n\t\t// Secondary countries are all countries, which have areaCodes specified in country-code.ts file.\r\n\t\tconst secondaryCountries = countries.filter(c => c.areaCodes !== undefined);\r\n\t\tlet matchedCountry = mainCountry ? mainCountry.iso2 : undefined;\r\n\r\n\t\t/*\r\n\t\t\tInterate over each secondary country and check if nationalNumber starts with any of areaCodes available.\r\n\t\t\tIf no matches found, fallback to the main country.\r\n\t\t*/\r\n\t\tsecondaryCountries.forEach(country => {\r\n\t\t\tcountry.areaCodes.forEach(areaCode => {\r\n\t\t\t\tif (rawNumber.startsWith(areaCode)) {\r\n\t\t\t\t\tmatchedCountry = country.iso2;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn matchedCountry;\r\n\t}\r\n\r\n\tseparateDialCodePlaceHolder(placeholder: string): string {\r\n\t\treturn this.removeDialCode(placeholder);\r\n\t}\r\n\r\n\tprivate removeDialCode(phoneNumber: string): string {\r\n\t\tif (this.separateDialCode && phoneNumber) {\r\n\t\t\tphoneNumber = phoneNumber.substr(phoneNumber.indexOf(' ') + 1);\r\n\t\t}\r\n\t\treturn phoneNumber;\r\n\t}\r\n\r\n\t// adjust input alignment\r\n\tprivate checkSeparateDialCodeStyle() {\r\n\t\tif (this.separateDialCode && this.selectedCountry) {\r\n\t\t\tconst cntryCd = this.selectedCountry.dialCode;\r\n\t\t\tthis.separateDialCodeClass = 'separate-dial-code iti-sdc-' + (cntryCd.length + 1);\r\n\t\t} else {\r\n\t\t\tthis.separateDialCodeClass = '';\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { NgxIntlTelInputComponent } from './ngx-intl-tel-input.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxIntlTelInputService } from './ngx-intl-tel-input.service';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\n@NgModule({\r\n\tdeclarations: [NgxIntlTelInputComponent],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBsDropdownModule.forRoot(),\r\n\t\tTooltipModule.forRoot()\r\n\t],\r\n\texports: [NgxIntlTelInputComponent]\r\n})\r\nexport class NgxIntlTelInputModule {\r\n\tstatic forRoot(): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: NgxIntlTelInputModule,\r\n\t\t\tproviders: [NgxIntlTelInputService]\r\n\t\t};\r\n\t}\r\n}\r\n","export enum TooltipLabel {\r\n\tName = 'name',\r\n\tIso2 = 'iso2'\r\n}\r\n"]}